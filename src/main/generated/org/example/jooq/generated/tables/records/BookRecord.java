/*
 * This file is generated by jOOQ.
 */
package org.example.jooq.generated.tables.records;


import java.time.LocalDate;

import org.example.jooq.generated.tables.Book;
import org.example.jooq.generated.tables.pojos.BookPojo;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class BookRecord extends UpdatableRecordImpl<BookRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>example.book.id</code>.
     */
    public BookRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>example.book.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>example.book.author_id</code>.
     */
    public BookRecord setAuthorId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>example.book.author_id</code>.
     */
    public Long getAuthorId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>example.book.title</code>.
     */
    public BookRecord setTitle(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>example.book.title</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>example.book.release_date</code>.
     */
    public BookRecord setReleaseDate(LocalDate value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>example.book.release_date</code>.
     */
    public LocalDate getReleaseDate() {
        return (LocalDate) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookRecord
     */
    public BookRecord() {
        super(Book.BOOK);
    }

    /**
     * Create a detached, initialised BookRecord
     */
    public BookRecord(Long id, Long authorId, String title, LocalDate releaseDate) {
        super(Book.BOOK);

        setId(id);
        setAuthorId(authorId);
        setTitle(title);
        setReleaseDate(releaseDate);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised BookRecord
     */
    public BookRecord(BookPojo value) {
        super(Book.BOOK);

        if (value != null) {
            setId(value.getId());
            setAuthorId(value.getAuthorId());
            setTitle(value.getTitle());
            setReleaseDate(value.getReleaseDate());
            resetChangedOnNotNull();
        }
    }
}
